#!/usr/bin/env python3

import json
from jsonmerge import merge
from pathlib import Path
from vscode_filetypes import languages

def read_config():
    config_file = Path().home() / '.vscode/ultisnips-vscode.json'
    with open(config_file, 'r') as f:
        data = json.load(f)
    return data

def replace_variables(string):
    conversions = {'VISUAL': 'TM_SELECTED_TEXT'}
    for old,new in conversions.items():
        string = string.replace(old,new)
    return string

def ultisnips_to_dict(ultisnips_file):
    snippets_dictionary = {}
    with open(ultisnips_file, 'r') as f:
        for line in f:
            if line.startswith('snippet'):
                dictionary = {}
                prefix = line.split()[1].strip()
                dictionary['prefix'] = prefix
                snippet_name = line.split("\"")[1].strip()
                dictionary['description'] = snippet_name
                body = []
                line = next(f)
                while not line.startswith('endsnippet'):
                    body.append(replace_variables(line.strip()))
                    line = next(f)
                dictionary['body'] = body
                snippets_dictionary[prefix] = dictionary
    return snippets_dictionary

def detect_filetype(ultisnips_file):
    stem = ultisnips_file.stem
    filename = stem + '.code-snippets'
    for extension in languages:
        if stem in extension:
            filename = languages[extension] + '.json'
    return filename

def extend(ultisnips_file):
    with open(ultisnips_file) as f:
        scope = None
        for line in f:
            if line.startswith('extends'):
                scope = line.split()[1].strip().split(',')
    return scope

def main():
    directories = read_config()
    ultisnips_dir = Path(directories['ultisnips-snippets']).expanduser()
    vscode_dir = Path(directories['vscode-snippets']).expanduser()
    files = list(ultisnips_dir.glob('*.snippets'))
    print('-'*120)
    for file in files:
        snippets_dictionary = ultisnips_to_dict(file)
        outfile = vscode_dir / detect_filetype(file)
        print(f'{str(file):<50} {"----->":<10} {str(outfile):<40}')
        with open(outfile, 'w') as f:
            json.dump(snippets_dictionary, f, indent=4)
    print('-'*120)
    for file in files:
        scope = extend(file)
        if scope:
            outfile = vscode_dir / detect_filetype(file)
            for s in scope:
                for l in languages:
                    if s in l:
                        s = languages[l]
                extension_file = list(vscode_dir.glob(f'{s}.*'))[0]
                with open(str(outfile), 'r+') as fo, open(str(extension_file), 'r') as fe:
                    fo_json = json.load(fo)
                    fe_json = json.load(fe)
                    result = merge(fo_json, fe_json)
                    fo.seek(0)
                    json.dump(result, fo, indent=4)
                print(f'extended {outfile.name} with {extension_file.name}')

if __name__ == "__main__":
   main()